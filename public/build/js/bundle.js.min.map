{"version":3,"sources":["modalAmigos.js","modalNotificacion.js","modalPublicacion.js","mostrarAmigos.js","publicaciones.js"],"names":["lupa","document","getElementById","modal","input","estadoBoton","relacion","usuarioAmigoId","usuarioId","estado","botonAgregar","querySelector","textContent","disabled","onclick","classList","toggle","addEventListener","busqueda","this","value","length","async","datos","FormData","append","url","respuesta","fetch","method","body","resultado","json","resultados","innerHTML","forEach","e","usuario","createElement","add","imagen","appendChild","nickname","dataset","id","amigoId","console","log","error","agregarAmigo","mostrarResultados","busquedaUsuarios","campana","notificaciones","texto","notificacion","usuario_id","agregar","mostrarNotificaciones","busquedaNotificaciones","publicarInput","publiacion","publicacionImagen","publicacionTexto","files","divAmigos","idSesion","amigos","div","divImagen","busquedaNombre","mostrarAmigos","map","buscarAmigos","publicacionesDiv","publicacion","divPerfil","imagenPerfil","mensaje","setAttribute","buscarPublicacicones"],"mappings":"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","file":"bundle.js","sourcesContent":["(function (){\r\n    const lupa = document.getElementById(\"lupa\"); // lupa para hacer las busquedas\r\n    if (lupa){\r\n        const modal = document.getElementById(\"busqueda\"); // ventana modal para las busquedas\r\n        const input = document.getElementById(\"busqueda__input\"); // input de las busquedas\r\n        lupa.onclick =  function (){\r\n            modal.classList.toggle(\"mostrar\")\r\n        }\r\n        input.addEventListener(\"input\", function(){\r\n            let busqueda = this.value;\r\n            if(busqueda.length > 3 ){ // a partir de 3 caracteres hara la busqueda\r\n                busquedaUsuarios(busqueda);\r\n            }\r\n        })\r\n\r\n        async function busquedaUsuarios(busqueda) { // funcion que busca en base a lo puesto en el input\r\n            const datos = new FormData();\r\n            datos.append(\"busqueda\", busqueda);\r\n            try {\r\n                const url = \"http://localhost:3000/api/busquedausuarios\";\r\n                const respuesta = await fetch(url, {\r\n                    method:\"POST\",\r\n                    body:datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                if(resultado){\r\n                    mostrarResultados(resultado) // mostrar los resultados en pantalla\r\n                }\r\n            } catch (error){\r\n\r\n            }\r\n        }\r\n\r\n        async function agregarAmigo(amigoId){\r\n            \r\n            const datos = new FormData();\r\n            datos.append(\"amigoId\",amigoId);\r\n            \r\n            try {\r\n                const url = \"http://localhost:3000/api/agregaamigo\"; // esta api agrega al usuario cambiando la relacion de amistad a 1 (amigos)\r\n                const respuesta = await fetch(url, {\r\n                    method: \"POST\",\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                if(resultado){\r\n                    estadoBoton(resultado)\r\n                    \r\n                }\r\n            } catch (error){\r\n\r\n            }\r\n        }\r\n\r\n        async function relacion(amigoId){ // api para buscar alguna relacion entre el resultado y el usuarios, si ya son amigos, o si tiene su solicitud pendente\r\n            \r\n            const datos = new FormData();\r\n            datos.append(\"amigoId\",amigoId);\r\n            \r\n            try {\r\n                const url = \"http://localhost:3000/api/estadorelacion\";\r\n                const respuesta = await fetch(url, {\r\n                    method: \"POST\",\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                if(resultado){\r\n                    console.log(resultado);\r\n                    estadoBoton(resultado);\r\n                    \r\n                }\r\n            } catch (error){\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n        function estadoBoton(relacion){ // dependiendo de si son amigos o no cambiara el boton de agregar para que en caso de que sean amigos no se puedan agregar o no se puedan enviar multiples solicitudos de amistad\r\n            \r\n            const {usuarioAmigoId,usuarioId, estado} = relacion\r\n            let botonAgregar = document.querySelector(`[data-id=\"${usuarioAmigoId}\"]`); // busca el boton por el id del amigo\r\n            if(!botonAgregar){\r\n                botonAgregar = document.querySelector(`[data-id=\"${usuarioId}\"]`); // en caso de que quien haya enviado la solicitud fue el usuario logeado, lo busca con el id del usuario\r\n            }\r\n\r\n            if(estado==0){\r\n                botonAgregar.textContent = \"Pendiente\"\r\n                botonAgregar.disabled = true;\r\n            }\r\n            if(estado==1){\r\n                botonAgregar.textContent = \"Agregado\"\r\n                botonAgregar.disabled = true;\r\n            }\r\n        }\r\n\r\n        function mostrarResultados(busqueda){\r\n            const resultados = document.getElementById(\"busqueda__resultados\");\r\n            resultados.innerHTML = \"\"\r\n            busqueda.forEach(e => {\r\n                const usuario = document.createElement(\"DIV\");\r\n                usuario.classList.add(\"busqueda-resultado\")\r\n\r\n                const imagen = document.createElement(\"DIV\");\r\n                imagen.classList.add(\"busqueda-resultado__imagen\");\r\n                usuario.appendChild(imagen);\r\n\r\n                const nickname = document.createElement(\"P\")\r\n                nickname.classList.add(\"busqueda-resultado__nickname\");\r\n                nickname.textContent = e.nickname;\r\n                usuario.appendChild(nickname);\r\n\r\n                const botonAgregar = document.createElement(\"BUTTON\");\r\n                botonAgregar.classList.add(\"busqueda-resultado__agregar\");\r\n                botonAgregar.textContent = \"Agregar\";\r\n                botonAgregar.dataset.id = e.id;\r\n                relacion(e.id); // como debemos de saber si son amigos o no o incluso se ya se han enviado solicitud, ocupamos buscar su relacion\r\n                botonAgregar.addEventListener(\"click\", ()=> {\r\n                    agregarAmigo(e.id)\r\n                });\r\n                usuario.appendChild(botonAgregar);\r\n\r\n                resultados.appendChild(usuario)\r\n            });\r\n        }\r\n    }\r\n})();","(function (){\r\n    const campana = document.getElementById(\"campana\");\r\n    if (campana){\r\n        \r\n        const notificaciones = document.getElementById(\"notificaciones\");\r\n        campana.onclick =  function (){\r\n            notificaciones.classList.toggle(\"mostrar\")\r\n            busquedaNotificaciones();\r\n        }\r\n\r\n        // buscar por solicitudes de amistad \r\n        async function busquedaNotificaciones() {\r\n            try {\r\n                const url = \"http://localhost:3000/api/notificaciones\";\r\n                const respuesta = await fetch(url, {\r\n                    method:\"POST\"\r\n                });\r\n                const resultado = await respuesta.json();\r\n                if(resultado){\r\n                    console.log(resultado);\r\n                    mostrarNotificaciones(resultado);\r\n                }\r\n            } catch (error){\r\n\r\n            }\r\n        }\r\n\r\n        \r\n\r\n        async function agregar(id) {\r\n            const botonAgregar = document.querySelector(`[data-id=\"${id}\"]`);\r\n            try { \r\n                const url = \"http://localhost:3000/api/agregar\"; \r\n                const datos = new FormData();\r\n                datos.append(\"id\",id ); // id de la persona a la que queremos agregar\r\n                const respuesta = await fetch(url, {\r\n                    method:\"POST\",\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                if(resultado){\r\n                    console.log(resultado); \r\n                    botonAgregar.textContent = \"Agregado\"\r\n                }\r\n            } catch (error){\r\n\r\n            }\r\n        }\r\n\r\n        function mostrarNotificaciones(resultados){\r\n            console.log(resultados)\r\n            notificaciones.innerHTML = \"\"\r\n            if (resultados.length == 0){\r\n                const texto = document.createElement(\"P\");\r\n                texto.textContent = \"No Tienes Solicitudes de amistad\"\r\n                texto.classList.add(\"notificacion__vacio\")\r\n                notificaciones.append(texto)\r\n            }\r\n            resultados.forEach(e  => {\r\n                const notificacion = document.createElement(\"DIV\");\r\n                notificacion.classList.add(\"notificacion\")\r\n\r\n                const imagen = document.createElement(\"DIV\");\r\n                imagen.classList.add(\"notificacion__imagen\");\r\n                notificacion.appendChild(imagen);\r\n\r\n                const nickname = document.createElement(\"P\")\r\n                nickname.classList.add(\"notificacion__nickname\");\r\n                nickname.textContent = e.nickname;\r\n                nickname.dataset.usuario_id = e.usuario_id;\r\n                \r\n                notificacion.appendChild(nickname);\r\n\r\n                const botonAgregar = document.createElement(\"BUTTON\");\r\n                botonAgregar.classList.add(\"notificacion__agregar\");\r\n                botonAgregar.textContent = \"Agregar\";\r\n                botonAgregar.dataset.id = e.id;\r\n                \r\n                botonAgregar.addEventListener(\"click\", ()=> {\r\n                    agregar(e.id);\r\n                });\r\n                notificacion.appendChild(botonAgregar);\r\n                notificaciones.appendChild(notificacion)\r\n            });\r\n        }\r\n    }\r\n})();","( function (){\r\n    const publicarInput = document.querySelector(\"#publicar\"); // input que se muestra para publicar\r\n    if (publicarInput){\r\n        const publiacion = document.querySelector(\"#publicacion\"); // ventana modal para publicar una publicacion\r\n\r\n        publicarInput.onclick = () => publiacion.classList.toggle(\"mostrar\"); // agrega o quita la clase\r\n\r\n        const publicacionImagen = document.getElementById(\"publicacion__imagen\");\r\n        const publicacionTexto = document.getElementById(\"publicacion__texto\");\r\n        const botonPublicar = document.getElementById(\"publicacion__boton\")\r\n\r\n        botonPublicar.onclick = publicar; \r\n\r\n        async function publicar(){\r\n        const imagen = publicacionImagen.files[0]; // agarra el primer elemento que tenga el input de archivos, osea que toma el valor que le hayamos cargado\r\n        console.log(imagen);\r\n        datos = new FormData();\r\n        datos.append(\"mensaje\", publicacionTexto.value) \r\n        datos.append(\"imagen\", imagen)\r\n        try {\r\n            const url = \"http://localhost:3000/api/publicar\"; // manda los datos a la api\r\n            const respuesta = await fetch(url, {\r\n                method:\"POST\",\r\n                body: datos\r\n            });\r\n            const resultado = await respuesta.json();\r\n            if(resultado){\r\n                console.log(resultado);\r\n            }\r\n        } catch (error){\r\n\r\n        }\r\n    }\r\n        }\r\n    }\r\n)();","( function (){\r\n    const divAmigos = document.querySelector(\".amigos\")\r\n    \r\n    if(divAmigos){\r\n        \r\n        document.addEventListener(\"DOMContentLoaded\", () => {\r\n           buscarAmigos();\r\n        })\r\n            async function buscarAmigos(){\r\n        try {\r\n            const url = \"http://localhost:3000/api/busquedaAmigos\"; // busca por los amigos a traves de la api\r\n            const respuesta = await fetch(url, {\r\n                method:\"POST\"\r\n            });\r\n            const resultado = await respuesta.json();\r\n            if(resultado){\r\n                console.log(resultado);\r\n                const resultados = resultado[0] // agarra los resultados de la consulta ya que en la api nos trae un arreglo de dos resultados, los dela base de datos y el id del usuario que inicio sesion\r\n                const idSesion = resultado[1] // toma el id del usuario que inicio sesion\r\n                const filtrado = resultados.map(e => { // filtra para poner el id del amigo en el campo de usuarioAmigoId\r\n                    if (!(e.usuarioId == idSesion)){\r\n                        e.usuarioAmigoId = e.usuarioId \r\n                    }\r\n                    return e;\r\n                })\r\n                mostrarAmigos(filtrado); // con los datos filtrados llama a la funcion para mostrar los datos en el html           \r\n            }\r\n        } catch (error){\r\n\r\n        }\r\n    }\r\n    async function busquedaNombre(id){ // api para buscar el nombre de un usuario\r\n        const datos = new FormData();\r\n        datos.append(\"id\",id)\r\n        try {\r\n            const url = \"http://localhost:3000/api/busquedaNombreUsuario\"; // busca por el nombre del amigo por medio de su id\r\n            const respuesta = await fetch(url, {\r\n                method:\"POST\",\r\n                body: datos\r\n            });\r\n            const resultado = await respuesta.json();\r\n            if(resultado){\r\n                const nickname = document.querySelector(`[data-id=\"${id}\"]`);\r\n                nickname.textContent = resultado.nickname;\r\n            }\r\n        } catch (error){\r\n\r\n        }\r\n    }\r\n\r\n    function mostrarAmigos(amigos){ // funcion para mostrar a los amigos\r\n        if(!amigos){\r\n            return;\r\n        }\r\n        amigos.forEach(e => {\r\n            const div = document.createElement(\"DIV\")\r\n            div.classList.add(\"amigo\")\r\n\r\n            const divImagen = document.createElement(\"DIV\")\r\n            divImagen.classList.add(\"amigo__imagen\")\r\n\r\n            const nickname = document.createElement(\"P\");\r\n            nickname.classList.add(\"amigo__nombre\");\r\n            nickname.dataset.id = e.usuarioAmigoId;\r\n\r\n            div.appendChild(divImagen);\r\n            div.appendChild(nickname);\r\n\r\n            divAmigos.appendChild(div)\r\n\r\n            busquedaNombre(e.usuarioAmigoId); // busca el nombre del amigo para mostrarlo\r\n        });\r\n    }\r\n    }\r\n\r\n})();","(function (){\r\n    const publicacionesDiv = document.getElementById(\"publicaciones\");\r\n    if(publicacionesDiv){// checamos si esta el div para inyectar las publicaciones\r\n        let publicaciones = [] // arreglo de publicaciones para en caso de  de hacer una nosotros, se muestre\r\n        document.addEventListener(\"DOMContentLoaded\",function(){ // buscara por las publicaciones cuando carge toda la pagina\r\n            buscarPublicacicones() // busca por publicaciones\r\n        });\r\n        async function buscarPublicacicones(){\r\n            datos = new FormData();\r\n            try {\r\n                const url = \"http://localhost:3000/api/busquedapublicaciones\";\r\n                const respuesta = await fetch(url, {\r\n                    method:\"POST\",\r\n                    body:datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                if(resultado){\r\n                    console.log(resultado);\r\n                    mostrarResultados(resultado) // mostrar los resultados en pantalla\r\n                }\r\n            } catch (error){\r\n\r\n            }\r\n            function mostrarResultados(resultados){\r\n                if(!resultados){\r\n                    \r\n                }\r\n                resultados.forEach(e => {\r\n                    const publicacion = document.createElement(\"DIV\");\r\n                    publicacion.classList.add(\"post\");\r\n\r\n                    const divPerfil = document.createElement(\"DIV\");\r\n                    divPerfil.classList.add(\"post__perfil\");\r\n\r\n                    const imagenPerfil = document.createElement(\"DIV\");\r\n                    imagenPerfil.classList.add(\"post__imagen-perfil\");\r\n                    divPerfil.appendChild(imagenPerfil);\r\n\r\n                    const nickname = document.createElement(\"P\");\r\n                    nickname.textContent = e.nickname;\r\n                    nickname.classList.add(\"post__nickname\");\r\n                    divPerfil.appendChild(nickname);\r\n                    publicacion.appendChild(divPerfil)\r\n\r\n                    const mensaje = document.createElement(\"P\");\r\n                    mensaje.textContent = e.mensaje;\r\n                    mensaje.classList.add(\"post__texto\");\r\n                    publicacion.appendChild(mensaje);\r\n\r\n                    const imagen = document.createElement(\"IMG\");\r\n                    imagen.setAttribute(\"src\", \"/imagenes-publicaciones/\" + e.imagen );\r\n                    imagen.classList.add(\"post__imagen\");\r\n                    publicacion.appendChild(imagen);\r\n\r\n\r\n\r\n                    publicacionesDiv.appendChild(publicacion);\r\n                });\r\n            }\r\n        }\r\n    }\r\n})();"]}