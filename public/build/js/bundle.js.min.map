{"version":3,"sources":["chat.js","modalAmigos.js","modalNotificacion.js","modalPublicacion.js","mostrarAmigos.js","publicaciones.js"],"names":["document","querySelector","addEventListener","value","lupa","getElementById","modal","input","estadoBoton","relacion","usuarioAmigoId","usuarioId","estado","botonAgregar","textContent","disabled","onclick","modalAbierto","classList","add","remove","busqueda","this","length","async","datos","FormData","append","url","respuesta","fetch","method","body","resultado","json","resultados","innerHTML","forEach","e","usuario","createElement","imagen","appendChild","nickname","dataset","id","amigoId","console","log","error","agregarAmigo","mostrarResultados","busquedaUsuarios","campana","notificaciones","texto","notificacion","usuario_id","agregar","mostrarNotificaciones","busquedaNotificaciones","publicarInput","publicacion","publicacionImagen","publicacionTexto","files","divAmigos","idSesion","amigos","div","URL","window","location","searchParams","set","history","pushState","href","includes","idAmigo","divImagen","busquedaNombre","mostrarAmigos","map","buscarAmigos","publicacionesDiv","divPerfil","imagenPerfil","mensaje","setAttribute","buscarPublicacicones"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n    const mensajes = document.querySelector(\"#mensajes\"); // div de mensajes\r\n    if(mensajes){ \r\n        \r\n        const botonEnviarMensaje = document.querySelector(\"#enviarmensaje\")\r\n\r\n        botonEnviarMensaje.addEventListener(\"click\", () =>{\r\n            const mensajeInput = document.querySelector(\"#mensaje\").value\r\n            if(mensajeInput){ // si tiene contenido el mensaje ejecuta el siguiente codigo\r\n                \r\n            }\r\n        })\r\n    }\r\n})();","(function (){\r\n    const lupa = document.getElementById(\"lupa\"); // lupa para hacer las busquedas\r\n    if (lupa){\r\n        const modal = document.getElementById(\"busqueda\"); // ventana modal para las busquedas\r\n        const input = document.getElementById(\"busqueda__input\"); // input de las busquedas\r\n        lupa.onclick =  function (){\r\n            const modalAbierto = document.querySelector(\".mostrar\");\r\n            if(modalAbierto){\r\n                modal.classList.add(\"mostrar\")\r\n                modalAbierto.classList.remove(\"mostrar\")\r\n                return\r\n            } \r\n            modal.classList.add(\"mostrar\")\r\n        }\r\n        input.addEventListener(\"input\", function(){\r\n            let busqueda = this.value;\r\n            if(busqueda.length > 3 ){ // a partir de 3 caracteres hara la busqueda\r\n                busquedaUsuarios(busqueda);\r\n            }\r\n        })\r\n\r\n        async function busquedaUsuarios(busqueda) { // funcion que busca en base a lo puesto en el input\r\n            const datos = new FormData();\r\n            datos.append(\"busqueda\", busqueda);\r\n            try {\r\n                const url = \"http://localhost:3000/api/busquedausuarios\";\r\n                const respuesta = await fetch(url, {\r\n                    method:\"POST\",\r\n                    body:datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                if(resultado){\r\n                    mostrarResultados(resultado) // mostrar los resultados en pantalla\r\n                }\r\n            } catch (error){\r\n\r\n            }\r\n        }\r\n\r\n        async function agregarAmigo(amigoId){\r\n            \r\n            const datos = new FormData();\r\n            datos.append(\"amigoId\",amigoId);\r\n            \r\n            try {\r\n                const url = \"http://localhost:3000/api/agregaamigo\"; // esta api agrega al usuario cambiando la relacion de amistad a 1 (amigos)\r\n                const respuesta = await fetch(url, {\r\n                    method: \"POST\",\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                if(resultado){\r\n                    estadoBoton(resultado)\r\n                    \r\n                }\r\n            } catch (error){\r\n\r\n            }\r\n        }\r\n\r\n        async function relacion(amigoId){ // api para buscar alguna relacion entre el resultado y el usuarios, si ya son amigos, o si tiene su solicitud pendente\r\n            \r\n            const datos = new FormData();\r\n            datos.append(\"amigoId\",amigoId);\r\n            \r\n            try {\r\n                const url = \"http://localhost:3000/api/estadorelacion\";\r\n                const respuesta = await fetch(url, {\r\n                    method: \"POST\",\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                if(resultado){\r\n                    console.log(resultado);\r\n                    estadoBoton(resultado);\r\n                    \r\n                }\r\n            } catch (error){\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n        function estadoBoton(relacion){ // dependiendo de si son amigos o no cambiara el boton de agregar para que en caso de que sean amigos no se puedan agregar o no se puedan enviar multiples solicitudos de amistad\r\n            \r\n            const {usuarioAmigoId,usuarioId, estado} = relacion\r\n            let botonAgregar = document.querySelector(`[data-id=\"${usuarioAmigoId}\"]`); // busca el boton por el id del amigo\r\n            if(!botonAgregar){\r\n                botonAgregar = document.querySelector(`[data-id=\"${usuarioId}\"]`); // en caso de que quien haya enviado la solicitud fue el usuario logeado, lo busca con el id del usuario\r\n            }\r\n\r\n            if(estado==0){\r\n                botonAgregar.textContent = \"Pendiente\"\r\n                botonAgregar.disabled = true;\r\n            }\r\n            if(estado==1){\r\n                botonAgregar.textContent = \"Agregado\"\r\n                botonAgregar.disabled = true;\r\n            }\r\n        }\r\n\r\n        function mostrarResultados(busqueda){\r\n            const resultados = document.getElementById(\"busqueda__resultados\");\r\n            resultados.innerHTML = \"\"\r\n            busqueda.forEach(e => {\r\n                const usuario = document.createElement(\"DIV\");\r\n                usuario.classList.add(\"busqueda-resultado\")\r\n\r\n                const imagen = document.createElement(\"DIV\");\r\n                imagen.classList.add(\"busqueda-resultado__imagen\");\r\n                usuario.appendChild(imagen);\r\n\r\n                const nickname = document.createElement(\"P\")\r\n                nickname.classList.add(\"busqueda-resultado__nickname\");\r\n                nickname.textContent = e.nickname;\r\n                usuario.appendChild(nickname);\r\n\r\n                const botonAgregar = document.createElement(\"BUTTON\");\r\n                botonAgregar.classList.add(\"busqueda-resultado__agregar\");\r\n                botonAgregar.textContent = \"Agregar\";\r\n                botonAgregar.dataset.id = e.id;\r\n                relacion(e.id); // como debemos de saber si son amigos o no o incluso se ya se han enviado solicitud, ocupamos buscar su relacion\r\n                botonAgregar.addEventListener(\"click\", ()=> {\r\n                    agregarAmigo(e.id)\r\n                });\r\n                usuario.appendChild(botonAgregar);\r\n\r\n                resultados.appendChild(usuario)\r\n            });\r\n        }\r\n    }\r\n})();","(function (){\r\n    const campana = document.getElementById(\"campana\");\r\n    if (campana){\r\n        \r\n        const notificaciones = document.getElementById(\"notificaciones\");\r\n        campana.onclick =  function (){\r\n            const modalAbierto = document.querySelector(\".mostrar\");\r\n            if(modalAbierto){\r\n                notificaciones.classList.add(\"mostrar\")\r\n                modalAbierto.classList.remove(\"mostrar\")\r\n                return\r\n            } \r\n            notificaciones.classList.add(\"mostrar\")\r\n            busquedaNotificaciones();\r\n        }\r\n\r\n        // buscar por solicitudes de amistad \r\n        async function busquedaNotificaciones() {\r\n            try {\r\n                const url = \"http://localhost:3000/api/notificaciones\";\r\n                const respuesta = await fetch(url, {\r\n                    method:\"POST\"\r\n                });\r\n                const resultado = await respuesta.json();\r\n                if(resultado){\r\n                    console.log(resultado);\r\n                    mostrarNotificaciones(resultado);\r\n                }\r\n            } catch (error){\r\n\r\n            }\r\n        }\r\n\r\n        \r\n\r\n        async function agregar(id) {\r\n            const botonAgregar = document.querySelector(`[data-id=\"${id}\"]`);\r\n            try { \r\n                const url = \"http://localhost:3000/api/agregar\"; \r\n                const datos = new FormData();\r\n                datos.append(\"id\",id ); // id de la persona a la que queremos agregar\r\n                const respuesta = await fetch(url, {\r\n                    method:\"POST\",\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                if(resultado){\r\n                    console.log(resultado); \r\n                    botonAgregar.textContent = \"Agregado\"\r\n                }\r\n            } catch (error){\r\n\r\n            }\r\n        }\r\n\r\n        function mostrarNotificaciones(resultados){\r\n            console.log(resultados)\r\n            notificaciones.innerHTML = \"\"\r\n            if (resultados.length == 0){\r\n                const texto = document.createElement(\"P\");\r\n                texto.textContent = \"No Tienes Solicitudes de amistad\"\r\n                texto.classList.add(\"notificacion__vacio\")\r\n                notificaciones.append(texto)\r\n            }\r\n            resultados.forEach(e  => {\r\n                const notificacion = document.createElement(\"DIV\");\r\n                notificacion.classList.add(\"notificacion\")\r\n\r\n                const imagen = document.createElement(\"DIV\");\r\n                imagen.classList.add(\"notificacion__imagen\");\r\n                notificacion.appendChild(imagen);\r\n\r\n                const nickname = document.createElement(\"P\")\r\n                nickname.classList.add(\"notificacion__nickname\");\r\n                nickname.textContent = e.nickname;\r\n                nickname.dataset.usuario_id = e.usuario_id;\r\n                \r\n                notificacion.appendChild(nickname);\r\n\r\n                const botonAgregar = document.createElement(\"BUTTON\");\r\n                botonAgregar.classList.add(\"notificacion__agregar\");\r\n                botonAgregar.textContent = \"Agregar\";\r\n                botonAgregar.dataset.id = e.id;\r\n                \r\n                botonAgregar.addEventListener(\"click\", ()=> {\r\n                    agregar(e.id);\r\n                });\r\n                notificacion.appendChild(botonAgregar);\r\n                notificaciones.appendChild(notificacion)\r\n            });\r\n        }\r\n    }\r\n})();","( function (){\r\n    const publicarInput = document.querySelector(\"#publicar\"); // input que se muestra para publicar\r\n    if (publicarInput){\r\n        const publicacion = document.querySelector(\"#publicacion\"); // ventana modal para publicar una publicacion\r\n\r\n        publicarInput.onclick = () => {\r\n            const modalAbierto = document.querySelector(\".mostrar\"); // si existe un modal que ya este abierto lo seleciconamos\r\n            if(modalAbierto){ // si existe al modal del archivo le añadimos la clase de mostrar y al que ya estaba abierto le quitamos la clase de mostrar\r\n                publicacion.classList.add(\"mostrar\")\r\n                modalAbierto.classList.remove(\"mostrar\")\r\n                return\r\n            } \r\n            publicacion.classList.add(\"mostrar\") // en caso de que noeste un modal abierto, al modal del archivo le ponemos la clase de mostrar\r\n        } \r\n\r\n        const publicacionImagen = document.getElementById(\"publicacion__imagen\");\r\n        const publicacionTexto = document.getElementById(\"publicacion__texto\");\r\n        const botonPublicar = document.getElementById(\"publicacion__boton\")\r\n\r\n        botonPublicar.onclick = publicar; \r\n\r\n        async function publicar(){\r\n        const imagen = publicacionImagen.files[0]; // agarra el primer elemento que tenga el input de archivos, osea que toma el valor que le hayamos cargado\r\n        console.log(imagen);\r\n        datos = new FormData();\r\n        datos.append(\"mensaje\", publicacionTexto.value) \r\n        datos.append(\"imagen\", imagen)\r\n        try {\r\n            const url = \"http://localhost:3000/api/publicar\"; // manda los datos a la api\r\n            const respuesta = await fetch(url, {\r\n                method:\"POST\",\r\n                body: datos\r\n            });\r\n            const resultado = await respuesta.json();\r\n            if(resultado){\r\n                console.log(resultado);\r\n            }\r\n        } catch (error){\r\n\r\n        }\r\n    }\r\n        }\r\n    }\r\n)();","( function (){\r\n    const divAmigos = document.querySelector(\".amigos\")\r\n    \r\n    if(divAmigos){\r\n        \r\n        document.addEventListener(\"DOMContentLoaded\", () => {\r\n           buscarAmigos();\r\n        })\r\n            async function buscarAmigos(){\r\n        try {\r\n            const url = \"http://localhost:3000/api/busquedaAmigos\"; // busca por los amigos a traves de la api\r\n            const respuesta = await fetch(url, {\r\n                method:\"POST\"\r\n            });\r\n            const resultado = await respuesta.json();\r\n            if(resultado){\r\n                console.log(resultado);\r\n                const resultados = resultado[0] // agarra los resultados de la consulta ya que en la api nos trae un arreglo de dos resultados, los dela base de datos y el id del usuario que inicio sesion\r\n                const idSesion = resultado[1] // toma el id del usuario que inicio sesion\r\n                const filtrado = resultados.map(e => { // filtra para poner el id del amigo en el campo de usuarioAmigoId en caso de que no este ahi\r\n                    if (!(e.usuarioId == idSesion)){\r\n                        e.usuarioAmigoId = e.usuarioId \r\n                    }\r\n                    return e;\r\n                })\r\n                mostrarAmigos(filtrado); // con los datos filtrados llama a la funcion para mostrar los datos en el html           \r\n            }\r\n        } catch (error){\r\n\r\n        }\r\n    }\r\n    async function busquedaNombre(id){ // api para buscar el nombre de un usuario\r\n        const datos = new FormData();\r\n        datos.append(\"id\",id)\r\n        try {\r\n            const url = \"http://localhost:3000/api/busquedaNombreUsuario\"; // busca por el nombre del amigo por medio de su id\r\n            const respuesta = await fetch(url, {\r\n                method:\"POST\",\r\n                body: datos\r\n            });\r\n            const resultado = await respuesta.json();\r\n            if(resultado){\r\n                const nickname = document.querySelector(`[data-id=\"${id}\"]`);\r\n                nickname.textContent = resultado.nickname;\r\n            }\r\n        } catch (error){\r\n\r\n        }\r\n    }\r\n\r\n    function mostrarAmigos(amigos){ // funcion para mostrar a los amigos\r\n        if(!amigos){\r\n            return;\r\n        }\r\n        amigos.forEach(e => {\r\n            const div = document.createElement(\"DIV\")\r\n            div.classList.add(\"amigo\")\r\n            div.onclick = ()=>{\r\n                const url = new URL(window.location);\r\n                url.searchParams.set(\"idamigo\", e.usuarioAmigoId);\r\n                window.history.pushState({}, '', url);\r\n                // \r\n                if(!url.href.includes(\"chats\")){\r\n                    window.location.href = `http://localhost:3000/dashboard/chats?idamigo=${e.usuarioAmigoId}`;\r\n                }\r\n            }\r\n            div.dataset.idAmigo = e.usuarioAmigoId\r\n\r\n            const divImagen = document.createElement(\"DIV\")\r\n            divImagen.classList.add(\"amigo__imagen\")\r\n\r\n            const nickname = document.createElement(\"P\");\r\n            nickname.classList.add(\"amigo__nombre\");\r\n            nickname.dataset.id = e.usuarioAmigoId;\r\n\r\n            div.appendChild(divImagen);\r\n            div.appendChild(nickname);\r\n\r\n            divAmigos.appendChild(div)\r\n\r\n            busquedaNombre(e.usuarioAmigoId); // busca el nombre del amigo para mostrarlo\r\n        });\r\n    }\r\n    }\r\n\r\n})();","(function (){\r\n    const publicacionesDiv = document.getElementById(\"publicaciones\");\r\n    if(publicacionesDiv){// checamos si esta el div para inyectar las publicaciones\r\n        let publicaciones = [] // arreglo de publicaciones para en caso de  de hacer una nosotros, se muestre\r\n        document.addEventListener(\"DOMContentLoaded\",function(){ // buscara por las publicaciones cuando carge toda la pagina\r\n            buscarPublicacicones() // busca por publicaciones\r\n        });\r\n        async function buscarPublicacicones(){\r\n            datos = new FormData();\r\n            try {\r\n                const url = \"http://localhost:3000/api/busquedapublicaciones\";\r\n                const respuesta = await fetch(url, {\r\n                    method:\"POST\",\r\n                    body:datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                if(resultado){\r\n                    console.log(resultado);\r\n                    mostrarResultados(resultado) // mostrar los resultados en pantalla\r\n                }\r\n            } catch (error){\r\n\r\n            }\r\n            function mostrarResultados(resultados){\r\n                if(!resultados){\r\n                    \r\n                }\r\n                resultados.forEach(e => {\r\n                    const publicacion = document.createElement(\"DIV\");\r\n                    publicacion.classList.add(\"post\");\r\n\r\n                    const divPerfil = document.createElement(\"DIV\");\r\n                    divPerfil.classList.add(\"post__perfil\");\r\n\r\n                    const imagenPerfil = document.createElement(\"DIV\");\r\n                    imagenPerfil.classList.add(\"post__imagen-perfil\");\r\n                    divPerfil.appendChild(imagenPerfil);\r\n\r\n                    const nickname = document.createElement(\"P\");\r\n                    nickname.textContent = e.nickname;\r\n                    nickname.classList.add(\"post__nickname\");\r\n                    divPerfil.appendChild(nickname);\r\n                    publicacion.appendChild(divPerfil)\r\n\r\n                    const mensaje = document.createElement(\"P\");\r\n                    mensaje.textContent = e.mensaje;\r\n                    mensaje.classList.add(\"post__texto\");\r\n                    publicacion.appendChild(mensaje);\r\n\r\n                    if(e.imagen){\r\n                        const imagen = document.createElement(\"IMG\");\r\n                        imagen.setAttribute(\"src\", \"/imagenes-publicaciones/\" + e.imagen );\r\n                        imagen.classList.add(\"post__imagen\");\r\n                        publicacion.appendChild(imagen);\r\n                    }\r\n\r\n\r\n\r\n\r\n                    publicacionesDiv.appendChild(publicacion);\r\n                });\r\n            }\r\n        }\r\n    }\r\n})();"]}