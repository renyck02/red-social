{"version":3,"sources":["chat.js","modalAmigos.js","modalNotificacion.js","modalPublicacion.js","mostrarAmigos.js","publicaciones.js"],"names":["document","querySelector","addEventListener","async","mensajeInput","value","url","URL","window","location","href","includes","datos","FormData","idAmigo","searchParams","get","append","respuesta","fetch","method","body","resultado","json","console","log","grupoId","error","mandarMensaje","lupa","getElementById","modal","input","estadoBoton","relacion","usuarioAmigoId","usuarioId","estado","botonAgregar","textContent","disabled","onclick","modalAbierto","classList","add","remove","busqueda","this","length","resultados","innerHTML","forEach","e","usuario","createElement","imagen","appendChild","nickname","dataset","id","amigoId","agregarAmigo","mostrarResultados","busquedaUsuarios","campana","notificaciones","texto","notificacion","usuario_id","agregar","mostrarNotificaciones","busquedaNotificaciones","publicarInput","publicacion","publicacionImagen","publicacionTexto","files","divAmigos","idSesion","amigos","div","set","history","pushState","divImagen","busquedaNombre","mostrarAmigos","map","buscarAmigos","publicacionesDiv","divPerfil","imagenPerfil","mensaje","setAttribute","buscarPublicacicones"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n    const mensajes = document.querySelector(\"#mensajes\"); // div de mensajes\r\n    if(mensajes){ \r\n        \r\n        const botonEnviarMensaje = document.querySelector(\"#enviarmensaje\")\r\n\r\n        botonEnviarMensaje.addEventListener(\"click\", async () =>{\r\n            const mensajeInput = document.querySelector(\"#mensaje\").value\r\n            if(mensajeInput){ // si tiene contenido el mensaje ejecuta el siguiente codigo\r\n                const url = new URL(window.location);\r\n                if(url.href.includes(\"chats\")) {\r\n                    \r\n                    // checar en la tabla de miembros_grupos uno donde esten los dos\r\n                    const datos = new FormData();\r\n                    const idAmigo = url.searchParams.get('idamigo');\r\n                    datos.append(\"idAmigo\", idAmigo);\r\n                    try {\r\n                        const url = \"http://localhost:3000/api/busquedadegrupo\";\r\n                        const respuesta = await fetch(url, {\r\n                            method:\"POST\",\r\n                            body:datos\r\n                        });\r\n                        const resultado = await respuesta.json();\r\n                        if(resultado){ // si si hay resultados significa que el gupo ya esta creado\r\n                            console.log(resultado) // mostrar los resultados en pantalla\r\n                            console.log(\"hay resultados\")\r\n                            mandarMensaje(resultado);\r\n                        }else {\r\n                            // no hay resultados, osea no hay un grupo de ellos, crearemos uno\r\n                            try {\r\n                                console.log(\"intentando crear el chat\")\r\n                                const url = \"http://localhost:3000/api/crearchat\";\r\n                                const respuesta = await fetch(url, {\r\n                                    method:\"POST\",\r\n                                    body:datos\r\n                                });\r\n                                const resultado = await respuesta.json();\r\n                                if(resultado){\r\n                                    console.log(resultado)\r\n                                }else {\r\n                                    console.log(\"no se creo el chat\")\r\n                                }\r\n                            } catch (error){\r\n                                \r\n                            }\r\n                        }\r\n                    } catch (error){\r\n        \r\n                    }\r\n\r\n                    // funcion para crear un grupo de 2 personas, un chat tipico\r\n                    async function mandarMensaje(grupoId){\r\n                        try {\r\n                            \r\n                            const url = \"http://localhost:3000/api/enviarmensaje\";\r\n                            const datos = new FormData();\r\n                            datos.append(\"contenido\", mensajeInput);\r\n                            datos.append(\"grupoId\", grupoId);\r\n                            const respuesta = await fetch(url, {\r\n                                method:\"POST\",\r\n                                body:datos\r\n                            });\r\n                            const resultado = await respuesta.json();\r\n                            if(resultado){\r\n                                console.log(resultado)\r\n                            }\r\n                        } catch (error){\r\n                            \r\n                        }\r\n                    }\r\n                    async function obtenerMensajes(grupoId){\r\n                        try {\r\n                            \r\n                            const url = \"http://localhost:3000/api/obtenerMensajes\";\r\n                            const datos = new FormData();\r\n                            datos.append(\"grupoId\", grupoId);\r\n                            const respuesta = await fetch(url, {\r\n                                method:\"POST\",\r\n                                body:datos\r\n                            });\r\n                            const resultado = await respuesta.json();\r\n                            if(resultado){\r\n                                console.log(resultado)\r\n                            }\r\n                        } catch (error){\r\n                            \r\n                        }\r\n                    }\r\n                }\r\n                \r\n            }\r\n        })\r\n    }\r\n})();","(function (){\r\n    const lupa = document.getElementById(\"lupa\"); // lupa para hacer las busquedas\r\n    if (lupa){\r\n        const modal = document.getElementById(\"busqueda\"); // ventana modal para las busquedas\r\n        const input = document.getElementById(\"busqueda__input\"); // input de las busquedas\r\n        lupa.onclick =  function (){\r\n            const modalAbierto = document.querySelector(\".mostrar\");\r\n            if(modalAbierto){\r\n                modal.classList.add(\"mostrar\")\r\n                modalAbierto.classList.remove(\"mostrar\")\r\n                return\r\n            } \r\n            modal.classList.add(\"mostrar\")\r\n        }\r\n        input.addEventListener(\"input\", function(){\r\n            let busqueda = this.value;\r\n            if(busqueda.length > 3 ){ // a partir de 3 caracteres hara la busqueda\r\n                busquedaUsuarios(busqueda);\r\n            }\r\n        })\r\n\r\n        async function busquedaUsuarios(busqueda) { // funcion que busca en base a lo puesto en el input\r\n            const datos = new FormData();\r\n            datos.append(\"busqueda\", busqueda);\r\n            try {\r\n                const url = \"http://localhost:3000/api/busquedausuarios\";\r\n                const respuesta = await fetch(url, {\r\n                    method:\"POST\",\r\n                    body:datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                if(resultado){\r\n                    mostrarResultados(resultado) // mostrar los resultados en pantalla\r\n                }\r\n            } catch (error){\r\n\r\n            }\r\n        }\r\n\r\n        async function agregarAmigo(amigoId){\r\n            \r\n            const datos = new FormData();\r\n            datos.append(\"amigoId\",amigoId);\r\n            \r\n            try {\r\n                const url = \"http://localhost:3000/api/agregaamigo\"; // esta api agrega al usuario cambiando la relacion de amistad a 1 (amigos)\r\n                const respuesta = await fetch(url, {\r\n                    method: \"POST\",\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                if(resultado){\r\n                    estadoBoton(resultado)\r\n                    \r\n                }\r\n            } catch (error){\r\n\r\n            }\r\n        }\r\n\r\n        async function relacion(amigoId){ // api para buscar alguna relacion entre el resultado y el usuarios, si ya son amigos, o si tiene su solicitud pendente\r\n            \r\n            const datos = new FormData();\r\n            datos.append(\"amigoId\",amigoId);\r\n            \r\n            try {\r\n                const url = \"http://localhost:3000/api/estadorelacion\";\r\n                const respuesta = await fetch(url, {\r\n                    method: \"POST\",\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                if(resultado){\r\n                    console.log(resultado);\r\n                    estadoBoton(resultado);\r\n                    \r\n                }\r\n            } catch (error){\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n        function estadoBoton(relacion){ // dependiendo de si son amigos o no cambiara el boton de agregar para que en caso de que sean amigos no se puedan agregar o no se puedan enviar multiples solicitudos de amistad\r\n            \r\n            const {usuarioAmigoId,usuarioId, estado} = relacion\r\n            let botonAgregar = document.querySelector(`[data-id=\"${usuarioAmigoId}\"]`); // busca el boton por el id del amigo\r\n            if(!botonAgregar){\r\n                botonAgregar = document.querySelector(`[data-id=\"${usuarioId}\"]`); // en caso de que quien haya enviado la solicitud fue el usuario logeado, lo busca con el id del usuario\r\n            }\r\n\r\n            if(estado==0){\r\n                botonAgregar.textContent = \"Pendiente\"\r\n                botonAgregar.disabled = true;\r\n            }\r\n            if(estado==1){\r\n                botonAgregar.textContent = \"Agregado\"\r\n                botonAgregar.disabled = true;\r\n            }\r\n        }\r\n\r\n        function mostrarResultados(busqueda){\r\n            const resultados = document.getElementById(\"busqueda__resultados\");\r\n            resultados.innerHTML = \"\"\r\n            busqueda.forEach(e => {\r\n                const usuario = document.createElement(\"DIV\");\r\n                usuario.classList.add(\"busqueda-resultado\")\r\n\r\n                const imagen = document.createElement(\"DIV\");\r\n                imagen.classList.add(\"busqueda-resultado__imagen\");\r\n                usuario.appendChild(imagen);\r\n\r\n                const nickname = document.createElement(\"P\")\r\n                nickname.classList.add(\"busqueda-resultado__nickname\");\r\n                nickname.textContent = e.nickname;\r\n                usuario.appendChild(nickname);\r\n\r\n                const botonAgregar = document.createElement(\"BUTTON\");\r\n                botonAgregar.classList.add(\"busqueda-resultado__agregar\");\r\n                botonAgregar.textContent = \"Agregar\";\r\n                botonAgregar.dataset.id = e.id;\r\n                relacion(e.id); // como debemos de saber si son amigos o no o incluso se ya se han enviado solicitud, ocupamos buscar su relacion\r\n                botonAgregar.addEventListener(\"click\", ()=> {\r\n                    agregarAmigo(e.id)\r\n                });\r\n                usuario.appendChild(botonAgregar);\r\n\r\n                resultados.appendChild(usuario)\r\n            });\r\n        }\r\n    }\r\n})();","(function (){\r\n    const campana = document.getElementById(\"campana\");\r\n    if (campana){\r\n        \r\n        const notificaciones = document.getElementById(\"notificaciones\");\r\n        campana.onclick =  function (){\r\n            const modalAbierto = document.querySelector(\".mostrar\");\r\n            if(modalAbierto){\r\n                notificaciones.classList.add(\"mostrar\")\r\n                modalAbierto.classList.remove(\"mostrar\")\r\n                return\r\n            } \r\n            notificaciones.classList.add(\"mostrar\")\r\n            busquedaNotificaciones();\r\n        }\r\n\r\n        // buscar por solicitudes de amistad \r\n        async function busquedaNotificaciones() {\r\n            try {\r\n                const url = \"http://localhost:3000/api/notificaciones\";\r\n                const respuesta = await fetch(url, {\r\n                    method:\"POST\"\r\n                });\r\n                const resultado = await respuesta.json();\r\n                if(resultado){\r\n                    console.log(resultado);\r\n                    mostrarNotificaciones(resultado);\r\n                }\r\n            } catch (error){\r\n\r\n            }\r\n        }\r\n\r\n        \r\n\r\n        async function agregar(id) {\r\n            const botonAgregar = document.querySelector(`[data-id=\"${id}\"]`);\r\n            try { \r\n                const url = \"http://localhost:3000/api/agregar\"; \r\n                const datos = new FormData();\r\n                datos.append(\"id\",id ); // id de la persona a la que queremos agregar\r\n                const respuesta = await fetch(url, {\r\n                    method:\"POST\",\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                if(resultado){\r\n                    console.log(resultado); \r\n                    botonAgregar.textContent = \"Agregado\"\r\n                }\r\n            } catch (error){\r\n\r\n            }\r\n        }\r\n\r\n        function mostrarNotificaciones(resultados){\r\n            console.log(resultados)\r\n            notificaciones.innerHTML = \"\"\r\n            if (resultados.length == 0){\r\n                const texto = document.createElement(\"P\");\r\n                texto.textContent = \"No Tienes Solicitudes de amistad\"\r\n                texto.classList.add(\"notificacion__vacio\")\r\n                notificaciones.append(texto)\r\n            }\r\n            resultados.forEach(e  => {\r\n                const notificacion = document.createElement(\"DIV\");\r\n                notificacion.classList.add(\"notificacion\")\r\n\r\n                const imagen = document.createElement(\"DIV\");\r\n                imagen.classList.add(\"notificacion__imagen\");\r\n                notificacion.appendChild(imagen);\r\n\r\n                const nickname = document.createElement(\"P\")\r\n                nickname.classList.add(\"notificacion__nickname\");\r\n                nickname.textContent = e.nickname;\r\n                nickname.dataset.usuario_id = e.usuario_id;\r\n                \r\n                notificacion.appendChild(nickname);\r\n\r\n                const botonAgregar = document.createElement(\"BUTTON\");\r\n                botonAgregar.classList.add(\"notificacion__agregar\");\r\n                botonAgregar.textContent = \"Agregar\";\r\n                botonAgregar.dataset.id = e.id;\r\n                \r\n                botonAgregar.addEventListener(\"click\", ()=> {\r\n                    agregar(e.id);\r\n                });\r\n                notificacion.appendChild(botonAgregar);\r\n                notificaciones.appendChild(notificacion)\r\n            });\r\n        }\r\n    }\r\n})();","( function (){\r\n    const publicarInput = document.querySelector(\"#publicar\"); // input que se muestra para publicar\r\n    if (publicarInput){\r\n        const publicacion = document.querySelector(\"#publicacion\"); // ventana modal para publicar una publicacion\r\n\r\n        publicarInput.onclick = () => {\r\n            const modalAbierto = document.querySelector(\".mostrar\"); // si existe un modal que ya este abierto lo seleciconamos\r\n            if(modalAbierto){ // si existe al modal del archivo le añadimos la clase de mostrar y al que ya estaba abierto le quitamos la clase de mostrar\r\n                publicacion.classList.add(\"mostrar\")\r\n                modalAbierto.classList.remove(\"mostrar\")\r\n                return\r\n            } \r\n            publicacion.classList.add(\"mostrar\") // en caso de que noeste un modal abierto, al modal del archivo le ponemos la clase de mostrar\r\n        } \r\n\r\n        const publicacionImagen = document.getElementById(\"publicacion__imagen\");\r\n        const publicacionTexto = document.getElementById(\"publicacion__texto\");\r\n        const botonPublicar = document.getElementById(\"publicacion__boton\")\r\n\r\n        botonPublicar.onclick = publicar; \r\n\r\n        async function publicar(){\r\n        const imagen = publicacionImagen.files[0]; // agarra el primer elemento que tenga el input de archivos, osea que toma el valor que le hayamos cargado\r\n        console.log(imagen);\r\n        datos = new FormData();\r\n        datos.append(\"mensaje\", publicacionTexto.value) \r\n        datos.append(\"imagen\", imagen)\r\n        try {\r\n            const url = \"http://localhost:3000/api/publicar\"; // manda los datos a la api\r\n            const respuesta = await fetch(url, {\r\n                method:\"POST\",\r\n                body: datos\r\n            });\r\n            const resultado = await respuesta.json();\r\n            if(resultado){\r\n                console.log(resultado);\r\n            }\r\n        } catch (error){\r\n\r\n        }\r\n    }\r\n        }\r\n    }\r\n)();","( function (){\r\n    const divAmigos = document.querySelector(\".amigos\")\r\n    \r\n    if(divAmigos){\r\n        \r\n        document.addEventListener(\"DOMContentLoaded\", () => {\r\n           buscarAmigos();\r\n        })\r\n            async function buscarAmigos(){\r\n        try {\r\n            const url = \"http://localhost:3000/api/busquedaAmigos\"; // busca por los amigos a traves de la api\r\n            const respuesta = await fetch(url, {\r\n                method:\"POST\"\r\n            });\r\n            const resultado = await respuesta.json();\r\n            if(resultado){\r\n                console.log(resultado);\r\n                const resultados = resultado[0] // agarra los resultados de la consulta ya que en la api nos trae un arreglo de dos resultados, los dela base de datos y el id del usuario que inicio sesion\r\n                const idSesion = resultado[1] // toma el id del usuario que inicio sesion\r\n                const filtrado = resultados.map(e => { // filtra para poner el id del amigo en el campo de usuarioAmigoId en caso de que no este ahi\r\n                    if (!(e.usuarioId == idSesion)){\r\n                        e.usuarioAmigoId = e.usuarioId \r\n                    }\r\n                    return e;\r\n                })\r\n                mostrarAmigos(filtrado); // con los datos filtrados llama a la funcion para mostrar los datos en el html           \r\n            }\r\n        } catch (error){\r\n\r\n        }\r\n    }\r\n    async function busquedaNombre(id){ // api para buscar el nombre de un usuario\r\n        const datos = new FormData();\r\n        datos.append(\"id\",id)\r\n        try {\r\n            const url = \"http://localhost:3000/api/busquedaNombreUsuario\"; // busca por el nombre del amigo por medio de su id\r\n            const respuesta = await fetch(url, {\r\n                method:\"POST\",\r\n                body: datos\r\n            });\r\n            const resultado = await respuesta.json();\r\n            if(resultado){\r\n                const nickname = document.querySelector(`[data-id=\"${id}\"]`);\r\n                nickname.textContent = resultado.nickname;\r\n            }\r\n        } catch (error){\r\n\r\n        }\r\n    }\r\n\r\n    function mostrarAmigos(amigos){ // funcion para mostrar a los amigos\r\n        if(!amigos){\r\n            return;\r\n        }\r\n        amigos.forEach(e => {\r\n            const div = document.createElement(\"DIV\")\r\n            div.classList.add(\"amigo\")\r\n            div.onclick = ()=>{\r\n                const url = new URL(window.location);\r\n                url.searchParams.set(\"idamigo\", e.usuarioAmigoId);\r\n                window.history.pushState({}, '', url);\r\n                // \r\n                if(!url.href.includes(\"chats\")){\r\n                    window.location.href = `http://localhost:3000/dashboard/chats?idamigo=${e.usuarioAmigoId}`;\r\n                }\r\n            }\r\n            div.dataset.idAmigo = e.usuarioAmigoId\r\n\r\n            const divImagen = document.createElement(\"DIV\")\r\n            divImagen.classList.add(\"amigo__imagen\")\r\n\r\n            const nickname = document.createElement(\"P\");\r\n            nickname.classList.add(\"amigo__nombre\");\r\n            nickname.dataset.id = e.usuarioAmigoId;\r\n\r\n            div.appendChild(divImagen);\r\n            div.appendChild(nickname);\r\n\r\n            divAmigos.appendChild(div)\r\n\r\n            busquedaNombre(e.usuarioAmigoId); // busca el nombre del amigo para mostrarlo\r\n        });\r\n    }\r\n    }\r\n\r\n})();","(function (){\r\n    const publicacionesDiv = document.getElementById(\"publicaciones\");\r\n    if(publicacionesDiv){// checamos si esta el div para inyectar las publicaciones\r\n        let publicaciones = [] // arreglo de publicaciones para en caso de  de hacer una nosotros, se muestre\r\n        document.addEventListener(\"DOMContentLoaded\",function(){ // buscara por las publicaciones cuando carge toda la pagina\r\n            buscarPublicacicones() // busca por publicaciones\r\n        });\r\n        async function buscarPublicacicones(){\r\n            datos = new FormData();\r\n            try {\r\n                const url = \"http://localhost:3000/api/busquedapublicaciones\";\r\n                const respuesta = await fetch(url, {\r\n                    method:\"POST\",\r\n                    body:datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                if(resultado){\r\n                    console.log(resultado);\r\n                    mostrarResultados(resultado) // mostrar los resultados en pantalla\r\n                }\r\n            } catch (error){\r\n\r\n            }\r\n            function mostrarResultados(resultados){\r\n                if(!resultados){\r\n                    \r\n                }\r\n                resultados.forEach(e => {\r\n                    const publicacion = document.createElement(\"DIV\");\r\n                    publicacion.classList.add(\"post\");\r\n\r\n                    const divPerfil = document.createElement(\"DIV\");\r\n                    divPerfil.classList.add(\"post__perfil\");\r\n\r\n                    const imagenPerfil = document.createElement(\"DIV\");\r\n                    imagenPerfil.classList.add(\"post__imagen-perfil\");\r\n                    divPerfil.appendChild(imagenPerfil);\r\n\r\n                    const nickname = document.createElement(\"P\");\r\n                    nickname.textContent = e.nickname;\r\n                    nickname.classList.add(\"post__nickname\");\r\n                    divPerfil.appendChild(nickname);\r\n                    publicacion.appendChild(divPerfil)\r\n\r\n                    const mensaje = document.createElement(\"P\");\r\n                    mensaje.textContent = e.mensaje;\r\n                    mensaje.classList.add(\"post__texto\");\r\n                    publicacion.appendChild(mensaje);\r\n\r\n                    if(e.imagen){\r\n                        const imagen = document.createElement(\"IMG\");\r\n                        imagen.setAttribute(\"src\", \"/imagenes-publicaciones/\" + e.imagen );\r\n                        imagen.classList.add(\"post__imagen\");\r\n                        publicacion.appendChild(imagen);\r\n                    }\r\n\r\n\r\n\r\n\r\n                    publicacionesDiv.appendChild(publicacion);\r\n                });\r\n            }\r\n        }\r\n    }\r\n})();"]}